<?php

namespace btsappli\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function getUsersEtStages()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u, s FROM btsappliUserBundle:User u LEFT JOIN u.stage s LEFT JOIN u.promotion p WHERE p.enCours = true AND u.roles LIKE \'%"ROLE_ETU"%\' ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function getEtudiantsEtPromotions()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u, p FROM btsappliUserBundle:User u LEFT JOIN u.promotion p WHERE u.roles LIKE \'%"ROLE_ETU"%\' ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function getUsersNonValides()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u FROM btsappliUserBundle:User u WHERE u.roles NOT LIKE \'%"ROLE_ETU"%\' AND u.roles NOT LIKE \'%"ROLE_SUPER_ADMIN"%\'');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function getEtudiants()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u FROM btsappliUserBundle:User u WHERE u.roles LIKE \'%"ROLE_ETU"%\' ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function findByEtatConventionValidee()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u, s FROM btsappliUserBundle:User u LEFT JOIN u.stage s LEFT JOIN u.promotion p WHERE s.etatConvention = 2 AND p.enCours = true ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function findByEtatConventionNonValidee()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u, s FROM btsappliUserBundle:User u LEFT JOIN u.stage s LEFT JOIN u.promotion p WHERE s.etatConvention = 1 AND p.enCours = true ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function findByEtatConventionSignee()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u, s FROM btsappliUserBundle:User u LEFT JOIN u.stage s LEFT JOIN u.promotion p WHERE s.etatConvention = 3 AND p.enCours = true ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function findByPasStage()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u FROM btsappliUserBundle:User u LEFT JOIN u.promotion p WHERE u.stage is null AND p.enCours = true AND u.roles LIKE \'%"ROLE_ETU"%\' ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
	
	public function findByPromoEnCours()
	{
	    // appel du gestionnaire d'entité avec une méthode spécifique au repository
		$gestionnaireEntite = $this -> _em;
		
		// écriture de la requête personnalisée
		$requete = $gestionnaireEntite->createQuery('SELECT u FROM btsappliUserBundle:User u LEFT JOIN u.promotion p WHERE p.enCours = true AND u.roles LIKE \'%"ROLE_ETU"%\' ORDER BY u.nom ASC, u.prenom ASC');
		
		// On exécute la requête et on renvoie les résultats
		return $requete->getResult();
	}
}
